##############################################################
#                                                            #
# SPCwaterproof Settings (2021)                              #
#                                                            #
# The defauts settings are suited for testing on localhost.  #
# If you're deploying SPCgeonode for production, you need to #
# adapt the following settings                               #
#                                                            #
# DO NOT FORGET to also modify values in _secrets !          #
#                                                            #
##############################################################

# Name of the setup (you only need to change this if you run several instances of the stack)
COMPOSE_PROJECT_NAME=spcwaterproof

# IP or domain name and port where the server can be reached on HTTPS (leave HOST empty if you want to use HTTP only)
HTTPS_HOST=
HTTPS_PORT=443

# IP or domain name and port where the server can be reached on HTTP (leave HOST empty if you want to use HTTPS only)
HTTP_HOST=127.0.0.1
HTTP_PORT=80

# Email where alters should be sent. This will be used by let's encrypt and as the django admin email.
ADMIN_USERNAME=edwin.piragauta@skaphe.com
ADMIN_PASSWORD=admin
ADMIN_EMAIL=edwin.piragauta@skaphe.com

# Database environment
POSTGRES_USER=postgres
## PostgreSQL superuser password (to be set if PostgreSQL is exposed)
POSTGRES_PASSWORD=p05tgr35
## geonode specific variables
## the standart geonode django database with non-spatial data
## the db name and username are identical by design
GEONODE_DATABASE=geonode
GEONODE_DATABASE_USER=geonode
GEONODE_DATABASE_PASSWORD=G30N0D3
## the spatial geonode django postigs database for data ingestion
## the db name and username are identical by design
GEONODE_GEODATABASE=geonode_data
GEONODE_GEODATABASE_USER=geonode_data
GEONODE_GEODATABASE_PASSWORD=G30N0D3

# Django secret key (replace this by any complex and random string)
SECRET_KEY=1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ

# Let's Encrypt certificates for https encryption. You must have a domain name as HTTPS_HOST (doesn't work
# with an ip) and it must be reachable from the outside. This can be one of the following :
# disabled : we do not get a certificate at all (a placeholder certificate will be used)
# staging : we get staging certificates (are invalid, but allow to test the process completely and have much higher limit rates)
# production : we get a normal certificate (default)
LETSENCRYPT_MODE=staging

# Choose from https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
TIME_ZONE=UTC

# Whether users should be able to create accounts themselves
REGISTRATION_OPEN=True

# Rclone backup configuration for Amazon S3 (leave empty if you don't want to use S3)
S3_ACCESS_KEY=
S3_SECRET_KEY=
S3_REGION=
S3_BUCKET=

# Geoserver settings
INITIAL_MEMORY=2G
# Startup memory for the JVM
MAXIMUM_MEMORY=4G
# maximum allowed memory for the JVM
GEOSERVER_CSRF_DISABLED=true
EXISTING_DATA_DIR=true
# Flag to indicate you have a data directory populated and do not need to reinitialise it

# EMAIL Notifications
EMAIL_ENABLE=True
DJANGO_EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
DJANGO_EMAIL_HOST=smtp.gmail.com
DJANGO_EMAIL_PORT=465
DJANGO_EMAIL_HOST_USER=srst@skaphe.com
DJANGO_EMAIL_HOST_PASSWORD=Skaphe2020*
DJANGO_EMAIL_USE_TLS=False
DJANGO_EMAIL_USE_SSL=True
DEFAULT_FROM_EMAIL='Skaphe <srst@skaphe.com>'

# Session/Access Control
LOCKDOWN_GEONODE=False
CORS_ORIGIN_ALLOW_ALL=True
X_FRAME_OPTIONS="ALLOW-FROM ALL"
SESSION_EXPIRED_CONTROL_ENABLED=True
DEFAULT_ANONYMOUS_VIEW_PERMISSION=True
DEFAULT_ANONYMOUS_DOWNLOAD_PERMISSION=True

ACCOUNT_AUTHENTICATION_METHOD=email
ACCOUNT_CONFIRM_EMAIL_ON_GET=True
ACCOUNT_EMAIL_REQUIRED=True
ACCOUNT_EMAIL_VERIFICATION=mandatory
ACCOUNT_AUTHENTICATED_LOGIN_REDIRECTS=False
ACCOUNT_UNIQUE_EMAIL=True
ACCOUNT_EMAIL_CONFIRMATION_REQUIRED=True
ACCOUNT_USERNAME_REQUIRED=False



# OAuth2
OAUTH2_API_KEY=
OAUTH2_CLIENT_ID=Jrchz2oPY3akmzndmgUTYrs9gczlgoV20YPSvqaV
OAUTH2_CLIENT_SECRET=rCnp5txobUo83EpQEblM8fVj3QT5zb5qRfxNsuPzCqZaiRyIoxM4jdgMiZKFfePBHYXCLd7B8NlkfDBY9HKeIQPcy5Cp08KQNpRHQbjpLItDHv12GvkSeXp6OxaUETv3

SITE_HOST_NAME=127.0.0.1
SITE_HOST_API=http://nginx/

SITEURL=http://127.0.0.1/
ALLOWED_HOSTS=['django', '*', '127.0.0.1', 'localhost']
DOCKER_ENV=development
DEBUG=True
GEOSERVER_WEB_UI_LOCATION=http://127.0.0.1/geoserver/
GEOSERVER_PUBLIC_LOCATION=http://127.0.0.1/geoserver/
GEOSERVER_LOCATION=http://nginx/geoserver/
GEOSERVER_ADMIN_USER=edwin.piragauta@skaphe.com
GEOSERVER_ADMIN_PASSWORD=admin

DEFAULT_BACKEND_UPLOADER=geonode.importer
DEFAULT_BACKEND_DATASTORE=datastore
DATABASE_URL=postgresql://geonode:G30N0D3@postgres:5432/geonode
GEODATABASE_URL=postgis://geonode_data:G30N0D3@postgres:5432/geonode_data

DJANGO_SETTINGS_MODULE=geonode.settings
GEONODE_INSTANCE_NAME=geonode
GEONODE_LB_HOST_IP=127.0.0.1
GEONODE_LB_PORT=80
STATIC_ROOT=/spcwaterproof-static/
MEDIA_ROOT=/spcwaterproof-media/
STATIC_URL=/static/
MEDIA_URL=/uploaded/
ASYNC_SIGNALS=False
BROKER_URL=amqp://guest:guest@rabbitmq:5672/
C_FORCE_ROOT=True
MONITORING_ENABLED=True
CACHE_BUSTING_STATIC_ENABLED=False
CACHE_BUSTING_MEDIA_ENABLED=False

# GeoNode APIs
API_LOCKDOWN=False
TASTYPIE_APIKEY=

WATERPROOF_API_SERVER = "/proxy/?url=http://127.00.0.1:8000/"
WATERPROOF_INVEST_API="http://127.0.0.1:8000/"
WATERPROOF_MODELS_PY3_API="http://127.0.0.1:8000/"
WATERPROOF_MODELS_PY2_API="http://127.0.0.1:5050/"